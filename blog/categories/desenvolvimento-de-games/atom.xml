<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Desenvolvimento De Games | Desenvolvimento de Games e Review de Games - AfterSix| Indie Games]]></title>
  <link href="http://blog.aftersixgames.com/blog/categories/desenvolvimento-de-games/atom.xml" rel="self"/>
  <link href="http://blog.aftersixgames.com/"/>
  <updated>2015-03-24T14:09:49-03:00</updated>
  <id>http://blog.aftersixgames.com/</id>
  <author>
    <name><![CDATA[AfterSix Games]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Desenvolvimento De Games Com CoronaSDK: Os Melhores Blogs Sobre Corona #1]]></title>
    <link href="http://blog.aftersixgames.com/blog/2015/03/23/os-melhores-bloggers-decorona-sdk-que-voce-deveria-acompanhar/"/>
    <updated>2015-03-23T14:24:18-03:00</updated>
    <id>http://blog.aftersixgames.com/blog/2015/03/23/os-melhores-bloggers-decorona-sdk-que-voce-deveria-acompanhar</id>
    <content type="html"><![CDATA[<p>Quando você está começando no desenvolvimento de games com coronaSDK, uma dúvida grande é: <del>OH e agora, quem poderá me defender?</del> Onde encontrar conteúdo bom para iniciantes?.
Desejamos nos tornar uma referência no asunto e que possamos te ajudar a resolver seus problemas. Mas como ainda não chegamos lá, vou indicar para você quem foi que nos ajudou quando estávamos começando.
Vou passar hoje dois exemplos de bons lugares para acompanhar.</p>

<h2><a href="http://coronalabs.com/blog">CoronaLabs</a></h2>

<p>Claro que  o blog mantido pela própria desenvolvedora do CoronaSDK seria o primeiro exemplo a ser citado.
O Blog deles tem atualizações frequentes. As publicações não se limitam apenas a ferramenta desenvolvida por eles, você vai encontrar inúmeras publicações sobre como publicar seu app nas lojas online do Google, da Apple e da Amazon.
Uma categoria interessante do blog é a FAQ, que como o nome já diz, responde as mais frequentes dúvidas.
Em uma rápida busca nas categorias, você irá encontrar também eBooks, dicas sobre a linguagem LUA e muitos vídeos.
A maior desvantagem é que o Blog é todo em inglês, algo que para quem está começando pode ser um pouco intimidador.</p>

<h2><a href="http://www.luiztools.com.br">luizTools</a></h2>

<p>O Blog do LuizTools é um dos mais antigos em português no que se trata de CoronaSDK, bom, pelo menos é um dos primeiros que eu vi em nosso idioma e que continua até hoje funcionando.
Meu primeiro contato com ele foi no post <a href="http://www.luiztools.com.br/post/Como-programar-para-iPhone-iPad-e-Android-de-barbada!.aspx">Como programar para iPhone, iPad e Android de barbada!</a>, onde ele falava sobre a liguagem LUA, sobre o CoronaSDK e ainda apresentava um Hello World.
Além disso tem um bom exemplo de Runner Game ou Endless Runner
que é o <a href="http://www.luiztools.com.br/post/Sunset-Riders-Lite-com-Corona-SDK-First-Step.aspx">Sunset Riders Lite com Corona SDK - First Step</a>, infelizmente essa versão não foi atualizada, mas a parte de logica dela ainda é excelente para ajudar quem está começando.
Mas o que mais chama atenção é o livro que ele traduziu para o portugues, o <a href="http://www.luiztools.com.br/post/nova-versao-do-livro-que-ensina-a-criar-aplicativos-com-corona-sdk.aspx">Criando Aplicações Móveis com Corona - O Livro(atualizado)</a> criado por de Brian G. Burton.</p>

<h2><a href="https://www.youtube.com/results?search_query=corona+sdk+beginner+tutorial&amp;spfreload=10">YouTube</a></h2>

<p>Outro lugar muito bom para quem está iniciando é o YouTube, lá você encontra material de estudo e exmplos muito bons, claro que a maioria deles é em inglês, mas mesmo pra quem não entende a lingua ainda vale acompanhar o processo.</p>

<h2>Conclusão</h2>

<p>Muito do que se tem hoje é conteúdo da propria desenvolvedora do corona ou algo produzido por americanos. Nossa ideia é justamente preencher esse espaço, produzindo conteúdo de qualidade em nosso idioma. Com isso, queremos trazer mais brasileiros ao desenvolvimento de games e nos tornarmos referência no assunto. Para que isso continue, todo feedback é bem vindo, queremos saber o que as pessoas tem achado de nossos posts, não somente sobre corona, mas sobre todos os assuntos que abordamos, ou seja, esperamos comentários nos posts para que os próximos sejam ainda melhores.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoronaSDK ScreenCast Tutorial - Desenvolvimento De Games - Flappy Bird #3]]></title>
    <link href="http://blog.aftersixgames.com/blog/2015/03/10/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-3/"/>
    <updated>2015-03-10T17:48:30-03:00</updated>
    <id>http://blog.aftersixgames.com/blog/2015/03/10/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-3</id>
    <content type="html"><![CDATA[<p style="text-align:center;"><img src="/images/2015-02-09-coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-1/coronasdk_logo.png" alt="alt Desenvolvimento de Games com CoronaSDK Logo" /></p>

<p>E ai pessoal, tudo certo?</p>

<p>Hoje vamos trazer mais um screancast com tutorial basico sobre CoronaSDK.
Nesse screencast sobre desenvolvimento de games, vamos usar como exemplo a mecanica do jogo Flappy Bird.
O nosso tutorial mostra como gerenciar as scenes com o composer, e como criar uma colisão de forma simples
nesse exemplo também é mostrado como o Corona SDK cria a extrutura inicial quando criamos um projeto novo de jogo.
Fiquem com o video e não se esqueçam de dar aquele curtir e compartilhar certo?</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/rtCCl6L08H4" allowfullscreen></iframe></div></p>

<!-- more -->


<p>Aproveite e baixe nossos jogos:</p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.com">SkateBoardAttack</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixapps.endroid">Endroid</a></p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.gtp.com">Get the Pigeon</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixgames.pigeonsimulator">Pigeon Simulator</a></p>

<p>todos estão <a href="https://play.google.com/store/apps/developer?id=AfterSixApps">aqui</a></p>

<p>baixe o exemplo em nosso repositório no <a href="https://github.com/aftersixgames/flappy_pigeon/tree/screencast03">git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoronaSDK ScreenCast Tutorial - Desenvolvimento De Games - Flappy Bird #2]]></title>
    <link href="http://blog.aftersixgames.com/blog/2015/03/03/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-2/"/>
    <updated>2015-03-03T19:44:16-03:00</updated>
    <id>http://blog.aftersixgames.com/blog/2015/03/03/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-2</id>
    <content type="html"><![CDATA[<p style="text-align:center;"><img src="/images/2015-02-09-coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-1/coronasdk_logo.png" alt="alt Desenvolvimento de Games com CoronaSDK Logo" /></p>

<p>E ai pessoal, tudo certo?</p>

<p>Hoje vamos trazer mais um screancast com tutorial basico sobre CoronaSDK.
Nesse screencast sobre desenvolvimento de games, vamos usar como exemplo a mecanica do jogo Flappy Bird.
O nosos tutorial mostrar como adicionar um SpriteSheet, como aplicar gravidade a um objeto, e como aplicar uma força em uma determinada direção.
então, fiquem com o video e não se esqueçam de dar aquele curtir e compartilhar certo?</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/QBE9cCMp_4g" allowfullscreen></iframe></div></p>

<!-- more -->


<p>Aproveite e baixe nossos jogos:</p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.com">SkateBoardAttack</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixapps.endroid">Endroid</a></p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.gtp.com">Get the Pigeon</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixgames.pigeonsimulator">Pigeon Simulator</a></p>

<p>todos estão <a href="https://play.google.com/store/apps/developer?id=AfterSixApps">aqui</a></p>

<p>baixe o exemplo em nosso repositório no <a href="https://github.com/aftersixgames/flappy_pigeon/tree/ScreenCast02">git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoronaSDK - 3 Coisas Que Você Precisa Saber Sobre Graphics 2.0]]></title>
    <link href="http://blog.aftersixgames.com/blog/2015/02/18/coronasdk-3-coisas-que-voce-precisa-saber-sobre-graphics-2-dot-0/"/>
    <updated>2015-02-18T21:36:41-02:00</updated>
    <id>http://blog.aftersixgames.com/blog/2015/02/18/coronasdk-3-coisas-que-voce-precisa-saber-sobre-graphics-2-dot-0</id>
    <content type="html"><![CDATA[<p style="text-align:center;"><img src="/images/2015-02-18-coronasdk-3-coisas-que-voce-precisa-saber-sobre-graphics-2-dot-0/coronasdk_logo.png" alt="alt Desenvolvimento de Games com CoronaSDK Logo" /></p>

<p>Olá pessoal recentemente o pessoal do Corona Labs trouxeram a <a href="http://coronalabs.com/blog/2013/11/14/new-public-release-and-graphics-2-0/">engine Grafica 2.0.</a></p>

<p>E enquanto nos foi dado muita coisa nova para brincar – tanto quanto enormes melhorias na engine grafica – nós também temos que adotar uma certa quantidade de mudanças, estas novas melhorias não vieram sem custo sobre o SDK básico.</p>

<p>Aqui estao as top 3 coisas que você precisa estar ciente a respeito da nova engine grafica no Corora SDK, sendo um iniciante ou mesmo migrando um projeto existente, aproveitem esse tutorial basico sobre coronaSDK e sobre o graphics 2.0.</p>

<!-- more -->


<h2>Anchor Points (Pontos Ancoras)</h2>

<p>A mais importante das mudanças no Corona SDK é <strong>display:SetReferencePoint()</strong> sendo substituido pelos mais flexiveis pontos ancoras.</p>

<p style="text-align:center;"><strong>Anchor points são os novos pontos de referência para mostrar objetos.</strong></p>

<p>Usando o antigo reference points, eramos capazes de atribuir um ponto em uma das nove posições (TopLeftReferencePoint, TopCenterReferencePoint, etc&hellip;), o que está bom na maioria dos casos, mas com o anchor points podemos posicionar em qualquer ponto em um espaço de objetos coordenados (display objects coordinate space). Antes de olharmos aos aspectos novos do anchor points, veremos como traduzir o velho sistema reference point para o novo anchor points, os quais agora são baseados em porcentagem. Esta sendo baseada na largura e altura do objeto.</p>

<p><strong>display.TopLeftReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.TopLeftReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 0, 0
</code>
<strong>display.TopCenterReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.TopCenterReferencePoint )
--Novo
obj.anchorX, obj.anchorY = .5, 0
</code>
<strong>display.TopRightReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.TopRightReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 1, 0
</code>
<strong>display.CenterLeftReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.CenterLeftReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 0, .5
</code>
<strong>display.CenterReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.CenterReferencePoint )
--Novo
obj.anchorX, obj.anchorY = .5, .5
</code>
<strong>display.CenterRightReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.CenterRightReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 1, .5
</code>
<strong>display.BottomLeftReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.BottomLeftReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 0, 1
</code>
<strong>display.BottomCenterReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.BottomCenterReferencePoint )
--Novo
obj.anchorX, obj.anchorY = .5, 1
</code>
<strong>display.BottomRightReferencePoint</strong>
<code>
--Velho
obj:setReferencePoint( display.BottomRightReferencePoint )
--Novo
obj.anchorX, obj.anchorY = 1, 1
</code></p>

<p>Como comentado anteriormente, o posicionamento é baseado em porcentagem.</p>

<p>Visualmente fica assim:</p>

<p style="text-align:center;"><img src="/images/2015-02-18-coronasdk-3-coisas-que-voce-precisa-saber-sobre-graphics-2-dot-0/anchor1.png" alt="alt Desenvolvimento de Games com CoronaSDK anchor2" /></p>

<p>Isto nos permite atribuir um “ponto de referencia” em qualquer ponto no objeto display. Se precisarmos rotacionar do centro, mas um pouquinho para a esquerda, então podemos fazer assim:</p>

<pre><code>obj.anchorX, obj.anchorY = .25, .5
</code></pre>

<p style="text-align:center;"><img src="/images/2015-02-18-coronasdk-3-coisas-que-voce-precisa-saber-sobre-graphics-2-dot-0/anchor2.png" alt="alt Desenvolvimento de Games com CoronaSDK anchor2" /></p>

<p>Esta nova maneira de trabalhar com reference points será de grande beneficio para dynamic UI e mostrar objetos que precisam se transformar em um ponto especifico.</p>

<p>Apesar de ser completamente opcional, você pode criar um “anchor helper” inserindo o seguinte código seu main.lua ou no globals.lua para criar alguns atalhos para pontos de ancora que operam como constante no antigo reference point:
<code>
-- main.lua or globals.lua
anchor = { TopLeft = function(t) t.anchorX, t.anchorY = 0, 0; end,
           TopCenter = function(t) t.anchorX, t.anchorY = .5, 0; end,
           TopRight = function(t) t.anchorX, t.anchorY = 1, 0; end,
           CenterLeft = function(t) t.anchorX, t.anchorY = 0, .5; end,
           Center = function(t) t.anchorX, t.anchorY = .5, .5; end,
           CenterRight = function(t) t.anchorX, t.anchorY = 1, .5; end,
           BottomLeft = function(t) t.anchorX, t.anchorY = 0, 1; end,
           BottomCenter = function(t) t.anchorX, t.anchorY = .5, 1; end,
           BottomRight = function(t) t.anchorX, t.anchorY = 1, 1; end, }
</code>
Para usar esta funcionalidade, você faria assim:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&ndash; some.lua&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local r = display.newRect( 0, 0, 200, 300 )&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;anchor.Center( r ) &ndash; seta a ancora para o centro
</span><span class='line'> 
</span><span class='line'>r.x = display.contentCenterX
</span><span class='line'>r.y = display.contentCenterY
</span><span class='line'> 
</span><span class='line'>anchor.TopLeft( r ) &ndash; seta a anchora para o topo / esquerda
</span><span class='line'> 
</span><span class='line'>r.x = 0
</span><span class='line'>r.y = 0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>## Valores de Cores
</span><span class='line'>
</span><span class='line'>Outra grande modificação é a maneira de especificar a cor. Cores agora também são baseadas em porcentagem. Neste caso o valor que precisamos especificar é a porcentagem do padrão 255 que estamos acostumados.
</span><span class='line'>
</span><span class='line'>Onde antes representavamos uma cor, como verde, assim:
</span><span class='line'>
</span><span class='line'>**0, 255, 0**
</span><span class='line'>
</span><span class='line'>Agora representamos assim:
</span><span class='line'>
</span><span class='line'>**0, 1, 0**
</span><span class='line'>
</span><span class='line'>Ou, 0% vermelho, 100% verde, 0% azul
</span><span class='line'>
</span><span class='line'>Os valores de colres que usavamos previamente variavam de 0 a 255. Podemos usar este fato para rapidamente calcular a porcentagem da cor.
</span><span class='line'>Por exemplo, para setar a cor para azul ardósia – que é 106, 90, 205 – podemos fazer assim:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;obj:setFillColor( 106/255, 90/255, 205/255 )
</span><span class='line'>&lt;code&gt;
</span><span class='line'>Você pode também ajustar o alpha. Que é facil representar com porcentagem.
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>obj:setFillColor( 106/255, 90/255, 205/255, .6 )
</span><span class='line'>&lt;code&gt;
</span><span class='line'>Isto proverá a porcentagem requerida para qualquer setFillColor() método de objeto.
</span><span class='line'>Novamente, completamente opcional, mas aqui uma simples função helper para cores. Coloque este codigo em global mod ou no topo do seu arquivo:
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>color = function(r,g,b) return (r/255), (g/255), (b/255); end
</span><span class='line'>&lt;code&gt;
</span><span class='line'>Você pode usar assim:
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>txtObj:setFillColor( color( 128, 128, 128 ) )</span></code></pre></td></tr></table></div></figure></p>

<h2>Text Color (Cor de texto)</h2>

<p>Agora que nos familiarizamos com os novos valores de cores, perceba que o método <strong>setTextColor()</strong> do TextObject tornou-se obsoleto e agora usa o universal <strong>setFillColor()</strong>. Novamente você deve fornecer os valores de cor usando o novo método como mostrado a baixo:
<code>
--Velho
textObj:setTextColor( 128, 128, 128 )
--Novo
textObj:setFillColor( 128/255, 128/255, 128/255 )
</code></p>

<p>Ainda temos muito a aprender sobre o novo Corona SDK graphics engine, mas dou boas vindas para as possibilidades que vem com ele. Espero que este artigo tenha te ajudado a entender um pouco mais sobre a nova engine, e que você comece a fazer algumas apps e jogos incríveis no <a href="http://www.coronalabs.com/">Corona SDK.</a></p>

<p>A tradução do <a href="http://www.develephant.net/3-things-you-need-to-know-about-corona-sdk-graphics-2-0/">Artigo original</a> foi feita pela <a href="br.linkedin.com/pub/franciele-andre/97/963/107/pt">Franciele Andre</a></p>

<p><em>Se você achou esta informação util, outros poderão também, então por favor compartilhe. Obrigado.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoronaSDK ScreenCast Tutorial - Desenvolvimento De Games - Flappy Bird #1]]></title>
    <link href="http://blog.aftersixgames.com/blog/2015/02/10/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-1/"/>
    <updated>2015-02-10T19:36:54-02:00</updated>
    <id>http://blog.aftersixgames.com/blog/2015/02/10/coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-1</id>
    <content type="html"><![CDATA[<p style="text-align:center;"><img src="/images/2015-02-09-coronasdk-screencast-tutorial-desenvolvimento-de-games-flappy-bird-number-1/coronasdk_logo.png" alt="alt Desenvolvimento de Games com CoronaSDK Logo" /></p>

<p>E ai pessoal, tudo certo?</p>

<p>Hoje vamos trazer mais um screancast com tutorial basico sobre CoronaSDK.
Nesse screencast sobre desenvolvimento de games, vamos usar como exemplo a mecanica do jogo Flappy Bird.
O nosos tutorial inicia mostrar como criar o efeito parallax.
então, fiquem com o video e não se esqueçam de dar aquele curtir e compartilhar certo?</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/XP7NmQqOlbY" allowfullscreen></iframe></div></p>

<!-- more -->


<p>Aproveite e baixe nossos jogos:</p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.com">SkateBoardAttack</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixapps.endroid">Endroid</a></p>

<p><a href="https://play.google.com/store/apps/details?id=aftersixgames.gtp.com">Get the Pigeon</a></p>

<p><a href="https://play.google.com/store/apps/details?id=com.aftersixgames.pigeonsimulator">Pigeon Simulator</a></p>

<p>todos estão <a href="https://play.google.com/store/apps/developer?id=AfterSixApps">aqui</a></p>

<p>baixe o exemplo em nosso repositório no <a href="https://github.com/aftersixgames/flappy_pigeon/tree/ScreenCast01">git</a></p>
]]></content>
  </entry>
  
</feed>
